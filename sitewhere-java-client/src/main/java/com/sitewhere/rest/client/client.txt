
    /*
     * @see
     * com.sitewhere.spi.ISiteWhereClient#getDeviceTypeByToken(com.sitewhere.spi.
     * ITenantAuthentication, java.lang.String)
     */
    @Override
    public DeviceType getDeviceTypeByToken(ITenantAuthentication tenant, String token) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", token);
	return sendTenantRest(tenant, getRestApiUrl() + "devicetypes/{token}", HttpMethod.GET, null, DeviceType.class,
		vars);
    }

    /*
     * @see com.sitewhere.spi.ISiteWhereClient#updateDeviceType(com.sitewhere.spi.
     * ITenantAuthentication, java.lang.String,
     * com.sitewhere.rest.model.device.request.DeviceTypeCreateRequest)
     */
    @Override
    public DeviceType updateDeviceType(ITenantAuthentication tenant, String token, DeviceTypeCreateRequest request)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", token);
	return sendTenantRest(tenant, getRestApiUrl() + "devicetypes/{token}", HttpMethod.PUT, null, DeviceType.class,
		vars);
    }

    /*
     * @see com.sitewhere.spi.ISiteWhereClient#listDeviceTypes(boolean, boolean,
     * com.sitewhere.rest.model.search.SearchCriteria)
     */
    @Override
    public DeviceTypeSearchResults listDeviceTypes(boolean includeDeleted, boolean includeAsset,
	    SearchCriteria criteria) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("includeDeleted", String.valueOf(includeDeleted));
	vars.put("includeAsset", String.valueOf(includeAsset));
	addSearchCriteria(vars, criteria);
	return sendGlobalRest(
		getRestApiUrl() + "devicetypes?includeDeleted={includeDeleted}&includeAsset={includeAsset}&"
			+ getSearchCriteriaFields(criteria),
		HttpMethod.GET, null, DeviceTypeSearchResults.class, vars);
    }

    /*
     * @see com.sitewhere.spi.ISiteWhereClient#deleteDeviceType(java.lang.String,
     * boolean)
     */
    @Override
    public DeviceType deleteDeviceType(String token, boolean deletePermanently) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", token);
	vars.put("force", String.valueOf(deletePermanently));
	return sendGlobalRest(getRestApiUrl() + "devicetypes/{token}&force={force}", HttpMethod.DELETE, null,
		DeviceType.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createDeviceCommand(java.lang.String,
     * com.sitewhere.rest.model.device.request.DeviceCommandCreateRequest)
     */
    @Override
    public DeviceCommand createDeviceCommand(String specToken, DeviceCommandCreateRequest request)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", specToken);
	return sendGlobalRest(getRestApiUrl() + "devicetypes/{token}/commands", HttpMethod.POST, request,
		DeviceCommand.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listDeviceCommands(java.lang.String,
     * boolean)
     */
    @Override
    public DeviceCommandSearchResults listDeviceCommands(String specificationToken, boolean includeDeleted)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", specificationToken);
	vars.put("includeDeleted", String.valueOf(includeDeleted));
	return sendGlobalRest(getRestApiUrl() + "devicetypes/{token}/commands?includeDeleted={includeDeleted}",
		HttpMethod.GET, null, DeviceCommandSearchResults.class, vars);
    }

    /*
     * @see
     * com.sitewhere.spi.ISiteWhereClient#createArea(com.sitewhere.rest.model.area.
     * request.AreaCreateRequest)
     */
    @Override
    public Area createArea(AreaCreateRequest request) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	return sendGlobalRest(getRestApiUrl() + "areas", HttpMethod.POST, request, Area.class, vars);
    }

    /*
     * @see com.sitewhere.spi.ISiteWhereClient#getAreaByToken(java.lang.String)
     */
    @Override
    public Area getAreaByToken(String token) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	return sendGlobalRest(getRestApiUrl() + "areas/" + token, HttpMethod.GET, null, Area.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createZone(java.lang.String,
     * com.sitewhere.rest.model.device.request.ZoneCreateRequest)
     */
    @Override
    public Zone createZone(String siteToken, ZoneCreateRequest request) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("siteToken", siteToken);
	return sendGlobalRest(getRestApiUrl() + "sites/{siteToken}/zones", HttpMethod.POST, request, Zone.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listZonesForSite(java.lang.String)
     */
    @Override
    public ZoneSearchResults listZonesForSite(String siteToken) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("siteToken", siteToken);
	String url = getRestApiUrl() + "sites/{siteToken}/zones";
	return sendGlobalRest(url, HttpMethod.GET, null, ZoneSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * com.sitewhere.spi.ISiteWhereClient#createDevice(com.sitewhere.rest.model.
     * device .request.DeviceCreateRequest )
     */
    @Override
    public Device createDevice(DeviceCreateRequest request) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	return sendGlobalRest(getRestApiUrl() + "devices", HttpMethod.POST, request, Device.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getDeviceByHardwareId(java.lang.
     * String)
     */
    @Override
    public Device getDeviceByHardwareId(String hardwareId) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("hardwareId", hardwareId);
	return sendGlobalRest(getRestApiUrl() + "devices/{hardwareId}", HttpMethod.GET, null, Device.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#updateDevice(java.lang.String,
     * com.sitewhere.rest.model.device.request.DeviceCreateRequest)
     */
    @Override
    public Device updateDevice(String hardwareId, DeviceCreateRequest request) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("hardwareId", hardwareId);
	return sendGlobalRest(getRestApiUrl() + "devices/{hardwareId}", HttpMethod.PUT, request, Device.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listDevices(boolean, boolean,
     * boolean, boolean, com.sitewhere.rest.model.search.DateRangeSearchCriteria)
     */
    @Override
    public DeviceSearchResults listDevices(boolean includeDeleted, boolean excludeAssigned,
	    boolean populateSpecification, boolean populateAssignment, DateRangeSearchCriteria criteria)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("includeDeleted", String.valueOf(includeDeleted));
	vars.put("excludeAssigned", String.valueOf(excludeAssigned));
	vars.put("includeSpecification", String.valueOf(populateSpecification));
	vars.put("includeAssignment", String.valueOf(populateAssignment));
	addSearchCriteria(vars, criteria);
	return sendGlobalRest(
		getRestApiUrl() + "devices?includeDeleted={includeDeleted}"
			+ "&excludeAssigned={excludeAssigned}&includeSpecification={includeSpecification}"
			+ "&includeAssignment={includeAssignment}&" + getSearchCriteriaFields(criteria),
		HttpMethod.GET, null, DeviceSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#deleteDevice(java.lang.String,
     * boolean)
     */
    @Override
    public Device deleteDevice(String hardwareId, boolean force) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("hardwareId", hardwareId);
	vars.put("force", String.valueOf(force));
	String url = getRestApiUrl() + "devices/{hardwareId}&force={force}";
	return sendGlobalRest(url, HttpMethod.DELETE, null, Device.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getCurrentAssignmentForDevice(java.
     * lang.String)
     */
    @Override
    public DeviceAssignment getCurrentAssignmentForDevice(String hardwareId) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("hardwareId", hardwareId);
	return sendGlobalRest(
		getRestApiUrl()
			+ "devices/{hardwareId}/assignment?includeAsset=false&includeDevice=false&includeSite=false",
		HttpMethod.GET, null, DeviceAssignment.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createDeviceAssignment(com.sitewhere.
     * spi.device .request. IDeviceAssignmentCreateRequest)
     */
    @Override
    public DeviceAssignment createDeviceAssignment(IDeviceAssignmentCreateRequest request) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	return sendGlobalRest(getRestApiUrl() + "assignments", HttpMethod.POST, request, DeviceAssignment.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getDeviceAssignmentByToken(java.lang.
     * String)
     */
    @Override
    public DeviceAssignment getDeviceAssignmentByToken(String assignmentToken) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("assignmentToken", assignmentToken);
	return sendGlobalRest(getRestApiUrl() + "assignments/{assignmentToken}", HttpMethod.GET, null,
		DeviceAssignment.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listAssignmentsForSite(java.lang.
     * String)
     */
    public DeviceAssignmentSearchResults listAssignmentsForSite(String token) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	return sendGlobalRest(getRestApiUrl() + "sites/" + token + "/assignments?includeDevice=true", HttpMethod.GET,
		null, DeviceAssignmentSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#deleteDeviceAssignment(java.lang.
     * String, boolean)
     */
    @Override
    public DeviceAssignment deleteDeviceAssignment(String assignmentToken, boolean force) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("assignmentToken", assignmentToken);
	String url = getRestApiUrl() + "assignments/{assignmentToken}";
	if (force) {
	    url += "?force=true";
	}
	return sendGlobalRest(url, HttpMethod.DELETE, null, DeviceAssignment.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * com.sitewhere.spi.ISiteWhereClient#listDeviceAssignmentHistory(java.lang.
     * String)
     */
    @Override
    public DeviceAssignmentSearchResults listDeviceAssignmentHistory(String hardwareId) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("hardwareId", hardwareId);
	return sendGlobalRest(getRestApiUrl() + "devices/{hardwareId}/assignments", HttpMethod.GET, null,
		DeviceAssignmentSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getAssignmentsForAsset(java.lang.
     * String, java.lang.String, java.lang.String,
     * com.sitewhere.spi.device.DeviceAssignmentStatus,
     * com.sitewhere.rest.model.search.SearchCriteria)
     */
    @Override
    public DeviceAssignmentSearchResults getAssignmentsForAsset(String siteToken, String assetModuleId, String assetId,
	    DeviceAssignmentStatus status, SearchCriteria criteria) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("assetModuleId", assetModuleId);
	vars.put("assetId", assetId);
	vars.put("siteToken", siteToken);
	String url = getRestApiUrl()
		+ "assets/modules/{assetModuleId}/assets/{assetId}/assignments?siteToken={siteToken}";
	if (status != null) {
	    url += "&status=" + status.name();
	}
	if (criteria != null) {
	    url += "&page=" + criteria.getPageNumber() + "&pageSize=" + criteria.getPageSize();
	}
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceAssignmentSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#addDeviceEventBatch(java.lang.String,
     * com.sitewhere.rest.model.device.DeviceEventBatch)
     */
    @Override
    public DeviceEventBatchResponse addDeviceEventBatch(String hardwareId, DeviceEventBatch batch)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("hardwareId", hardwareId);
	return sendGlobalRest(getRestApiUrl() + "devices/{hardwareId}/batch", HttpMethod.POST, batch,
		DeviceEventBatchResponse.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#updateDeviceAssignmentMetadata(java.
     * lang.String, com.sitewhere.rest.model.device.MetadataProvider)
     */
    @Override
    public DeviceAssignment updateDeviceAssignmentMetadata(String token, MetadataProvider metadata)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", token);
	return sendGlobalRest(getRestApiUrl() + "assignments/{token}/metadata", HttpMethod.POST, metadata,
		DeviceAssignment.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createDeviceMeasurements(java.lang.
     * String,
     * com.sitewhere.rest.model.device.request.DeviceMeasurementsCreateRequest)
     */
    @Override
    public DeviceMeasurement createDeviceMeasurements(String assignmentToken, DeviceMeasurementCreateRequest request)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	return sendGlobalRest(getRestApiUrl() + "assignments/{token}/measurements", HttpMethod.POST, request,
		DeviceMeasurement.class, vars);
    }

    /*
     * @see
     * com.sitewhere.spi.ISiteWhereClient#listDeviceMeasurements(java.lang.String,
     * com.sitewhere.rest.model.search.DateRangeSearchCriteria)
     */
    @Override
    public SearchResults<IDeviceMeasurement> listDeviceMeasurements(String assignmentToken,
	    DateRangeSearchCriteria searchCriteria) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	addSearchCriteria(vars, searchCriteria);

	String url = getRestApiUrl() + "assignments/{token}/measurements?";
	if (searchCriteria != null) {
	    url += getSearchCriteriaFields(searchCriteria);
	}
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceMeasurementsSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * com.sitewhere.spi.ISiteWhereClient#createDeviceLocation(java.lang.String,
     * com.sitewhere.rest.model.device.request.DeviceLocationCreateRequest)
     */
    @Override
    public DeviceLocation createDeviceLocation(String assignmentToken, DeviceLocationCreateRequest request)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	return sendGlobalRest(getRestApiUrl() + "assignments/{token}/locations", HttpMethod.POST, request,
		DeviceLocation.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listDeviceLocations(java.lang.String,
     * com.sitewhere.rest.model.search.DateRangeSearchCriteria)
     */
    @Override
    public DeviceLocationSearchResults listDeviceLocations(String assignmentToken, DateRangeSearchCriteria criteria)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	addSearchCriteria(vars, criteria);
	String url = getRestApiUrl() + "assignments/{token}/locations?" + getSearchCriteriaFields(criteria);
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceLocationSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createDeviceAlert(java.lang.String,
     * com.sitewhere.rest.model.device.request.DeviceAlertCreateRequest)
     */
    @Override
    public DeviceAlert createDeviceAlert(String assignmentToken, DeviceAlertCreateRequest request)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	return sendGlobalRest(getRestApiUrl() + "assignments/{token}/alerts", HttpMethod.POST, request,
		DeviceAlert.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listDeviceAlerts(java.lang.String,
     * com.sitewhere.rest.model.search.DateRangeSearchCriteria)
     */
    @Override
    public DeviceAlertSearchResults listDeviceAlerts(String assignmentToken, DateRangeSearchCriteria criteria)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	addSearchCriteria(vars, criteria);
	String url = getRestApiUrl() + "assignments/{token}/alerts?" + getSearchCriteriaFields(criteria);
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceAlertSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createDeviceCommandInvocation(java.
     * lang.String, com.sitewhere.rest.model.device.event.request.
     * DeviceCommandInvocationCreateRequest)
     */
    @Override
    public DeviceCommandInvocation createDeviceCommandInvocation(String assignmentToken,
	    DeviceCommandInvocationCreateRequest request) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	return sendGlobalRest(getRestApiUrl() + "assignments/{token}/invocations", HttpMethod.POST, request,
		DeviceCommandInvocation.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * com.sitewhere.spi.ISiteWhereClient#listDeviceCommandInvocations(java.lang
     * .String, com.sitewhere.rest.model.search.DateRangeSearchCriteria)
     */
    @Override
    public DeviceCommandInvocationSearchResults listDeviceCommandInvocations(String assignmentToken,
	    DateRangeSearchCriteria criteria) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	addSearchCriteria(vars, criteria);
	String url = getRestApiUrl() + "assignments/{token}/invocations?" + getSearchCriteriaFields(criteria);
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceCommandInvocationSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createDeviceStream(java.lang.String,
     * com.sitewhere.rest.model.device.request.DeviceStreamCreateRequest)
     */
    @Override
    public DeviceStream createDeviceStream(String assignmentToken, DeviceStreamCreateRequest request)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	return sendGlobalRest(getRestApiUrl() + "assignments/{token}/streams", HttpMethod.POST, request,
		DeviceStream.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getDeviceStream(java.lang.String,
     * java.lang.String)
     */
    @Override
    public DeviceStream getDeviceStream(String assignmentToken, String streamId) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	vars.put("streamId", streamId);
	String url = getRestApiUrl() + "assignments/{token}/streams/{streamId}";
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceStream.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listDeviceStreams(java.lang.String,
     * com.sitewhere.rest.model.search.DateRangeSearchCriteria)
     */
    @Override
    public DeviceStreamSearchResults listDeviceStreams(String assignmentToken, DateRangeSearchCriteria criteria)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	addSearchCriteria(vars, criteria);
	String url = getRestApiUrl() + "assignments/{token}/streams?" + getSearchCriteriaFields(criteria);
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceStreamSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#addDeviceStreamData(java.lang.String,
     * java.lang.String, long, byte[])
     */
    @Override
    public void addDeviceStreamData(String assignmentToken, String streamId, long sequenceNumber, byte[] data)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	vars.put("streamId", streamId);
	vars.put("sequenceNumber", String.valueOf(sequenceNumber));
	sendBinary(getRestApiUrl() + "assignments/{token}/streams/{streamId}?sequenceNumber={sequenceNumber}",
		HttpMethod.POST, data, null, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getDeviceStreamData(java.lang.String,
     * java.lang.String, long)
     */
    @Override
    public byte[] getDeviceStreamData(String assignmentToken, String streamId, long sequenceNumber)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	vars.put("streamId", streamId);
	vars.put("sequenceNumber", String.valueOf(sequenceNumber));
	try {
	    return sendRestWithBinaryResponse(
		    getRestApiUrl() + "assignments/{token}/streams/{streamId}/data/{sequenceNumber}", HttpMethod.GET,
		    vars);
	} catch (SiteWhereSystemException e) {
	    return null;
	}
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * com.sitewhere.spi.ISiteWhereClient#listDeviceStreamData(java.lang.String,
     * java.lang.String, com.sitewhere.rest.model.search.DateRangeSearchCriteria)
     */
    @Override
    public byte[] listDeviceStreamData(String assignmentToken, String streamId, DateRangeSearchCriteria criteria)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", assignmentToken);
	vars.put("streamId", streamId);
	return sendRestWithBinaryResponse(getRestApiUrl() + "assignments/{token}/streams/{streamId}/data",
		HttpMethod.GET, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * com.sitewhere.spi.ISiteWhereClient#createBatchCommandInvocation(java.lang
     * .String, java.lang.String, java.util.Map, java.util.List)
     */
    @Override
    public BatchOperation createBatchCommandInvocation(String batchToken, String commandToken,
	    Map<String, String> parameters, List<String> deviceTokens) throws SiteWhereException {
	BatchCommandInvocationRequest request = new BatchCommandInvocationRequest();
	request.setToken(batchToken);
	request.setCommandToken(commandToken);
	request.setParameterValues(parameters);
	request.setDeviceTokens(deviceTokens);
	Map<String, String> vars = new HashMap<String, String>();
	return sendGlobalRest(getRestApiUrl() + "batch/command", HttpMethod.POST, request, BatchOperation.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#createDeviceGroup(com.sitewhere.rest.
     * model. device .request.DeviceGroupCreateRequest)
     */
    @Override
    public DeviceGroup createDeviceGroup(DeviceGroupCreateRequest request) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	return sendGlobalRest(getRestApiUrl() + "devicegroups", HttpMethod.POST, request, DeviceGroup.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getDeviceGroupByToken(java.lang.
     * String)
     */
    @Override
    public DeviceGroup getDeviceGroupByToken(String token) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", token);
	return sendGlobalRest(getRestApiUrl() + "devicegroups/{token}", HttpMethod.GET, null, DeviceGroup.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#deleteDeviceGroup(java.lang.String)
     */
    @Override
    public DeviceGroup deleteDeviceGroup(String token) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", token);
	return sendGlobalRest(getRestApiUrl() + "devicegroups/{token}", HttpMethod.DELETE, null, DeviceGroup.class,
		vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listDeviceGroups(java.lang.String,
     * com.sitewhere.rest.model.search.SearchCriteria, boolean)
     */
    @Override
    public DeviceGroupSearchResults listDeviceGroups(String role, SearchCriteria criteria, boolean includeDeleted)
	    throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	addSearchCriteria(vars, criteria);
	String url = getRestApiUrl() + "devicegroups?includeDeleted=" + includeDeleted + "&"
		+ getSearchCriteriaFields(criteria);
	if (role != null) {
	    url += "&role=" + role;
	}
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceGroupSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#addDeviceGroupElements(java.lang.
     * String, java.util.List)
     */
    @Override
    public DeviceGroupElementSearchResults addDeviceGroupElements(String groupToken,
	    List<DeviceGroupElementCreateRequest> elements) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", groupToken);
	return sendGlobalRest(getRestApiUrl() + "devicegroups/{token}/elements", HttpMethod.PUT, elements,
		DeviceGroupElementSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#listDeviceGroupElements(java.lang.
     * String, boolean, com.sitewhere.rest.model.search.SearchCriteria)
     */
    @Override
    public DeviceGroupElementSearchResults listDeviceGroupElements(String groupToken, boolean includeDetails,
	    SearchCriteria criteria) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", groupToken);
	addSearchCriteria(vars, criteria);
	String url = getRestApiUrl() + "devicegroups/{token}/elements?" + getSearchCriteriaFields(criteria);
	return sendGlobalRest(url, HttpMethod.GET, null, DeviceGroupElementSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#deleteDeviceGroupElements(java.lang.
     * String, java.util.List)
     */
    @Override
    public DeviceGroupElementSearchResults deleteDeviceGroupElements(String groupToken,
	    List<DeviceGroupElementCreateRequest> elements) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	vars.put("token", groupToken);
	return sendGlobalRest(getRestApiUrl() + "devicegroups/{token}/elements", HttpMethod.DELETE, elements,
		DeviceGroupElementSearchResults.class, vars);
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.sitewhere.spi.ISiteWhereClient#getAssetsByModuleId(java.lang.String,
     * java.lang.String)
     */
    public AssetSearchResults getAssetsByModuleId(String moduleId, String criteria) throws SiteWhereException {
	Map<String, String> vars = new HashMap<String, String>();
	String url = "assets/modules/" + moduleId + "/assets";
	if ((criteria != null) && (criteria.length() > 0)) {
	    url += "?criteria=" + criteria;
	}
	return sendGlobalRest(getRestApiUrl() + url, HttpMethod.GET, null, AssetSearchResults.class, vars);
    }
